{"version":3,"file":"src_app_account_account_module_ts.js","mappings":"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","sources":["./src/app/account/account-routing.module.ts","./src/app/account/account.module.ts","./src/app/account/login/login.component.ts","./src/app/account/login/login.component.html","./src/app/account/register/register.component.ts","./src/app/account/register/register.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent},\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AccountRoutingModule } from './account-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    SharedModule\n  ]\n})\nexport class AccountModule { }\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AccountService } from '../account.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n  loginForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', Validators.required)\n  })\n  returnUrl: string;\n\n  constructor(private accountService: AccountService, private router: Router, \n    private activatedRoute: ActivatedRoute) {\n      this.returnUrl = this.activatedRoute.snapshot.queryParams['returnUrl'] || '/shop'\n  }\n\n  onSubmit() {\n    this.accountService.login(this.loginForm.value).subscribe({\n      next: () => this.router.navigateByUrl(this.returnUrl)\n    })\n  }\n}\n","<div class=\"d-flex justify-content-center mt-5\">\n  <div class=\"col-3\">\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"text-center mb-4\">\n        <h1 class=\"mb-3\">Login</h1>\n      </div>\n      \n      <app-text-input [formControl]=\"loginForm.controls['email']\" [label]=\"'Email Address'\"></app-text-input>\n      <app-text-input [formControl]=\"loginForm.controls['password']\" [label]=\"'Password'\" [type]=\"'password'\"></app-text-input>\n\n      <div class=\"d-grid\">\n        <button [disabled]=\"loginForm.invalid\" class=\"btn btn-lg btn-primary mt-3\" type=\"submit\">Sign in</button>\n      </div>\n    </form>\n  </div>\n\n</div>","import { Component } from '@angular/core';\nimport { AbstractControl, AsyncValidatorFn, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { debounceTime, finalize, map, switchMap, take } from 'rxjs';\nimport { AccountService } from '../account.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n  errors: string[] | null = null;\n\n  constructor(private fb: FormBuilder, private accountService: AccountService, private router: Router) {}\n\n  complexPassword = \"(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$\"\n\n  registerForm = this.fb.group({\n    displayName: ['', Validators.required],\n    email: ['', [Validators.required, Validators.email], [this.validateEmailNotTaken()]],\n    password: ['', [Validators.required, Validators.pattern(this.complexPassword)]],\n  })  \n\n  onSubmit() {\n    this.accountService.register(this.registerForm.value).subscribe({\n      next: () => this.router.navigateByUrl('/shop'),\n      error: error => this.errors = error.errors\n    })\n  }\n\n  validateEmailNotTaken(): AsyncValidatorFn {\n    return (control: AbstractControl) => {\n      return control.valueChanges.pipe(\n        debounceTime(1000),\n        take(1),\n        switchMap(() => {\n          return this.accountService.checkEmailExists(control.value).pipe(\n            map(result => result ? {emailExists: true} : null),\n            finalize(() => control.markAsTouched())\n          )\n        })\n      )\n\n    }\n  }\n}\n","<div class=\"d-flex justify-content-center mt-5\">\n    <div class=\"col-3\">\n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"text-center mb-4\">\n          <h1 class=\"mb-3\">Sign up</h1>\n        </div>\n        \n        <app-text-input [formControl]=\"registerForm.controls['displayName']\" [label]=\"'Display Name'\"></app-text-input>\n        <app-text-input [formControl]=\"registerForm.controls['email']\" [label]=\"'Email Address'\"></app-text-input>\n        <app-text-input [formControl]=\"registerForm.controls['password']\" [label]=\"'Password'\" [type]=\"'password'\"></app-text-input>\n  \n        <ul class=\"text-danger list-unstyled\" *ngIf=\"errors\">\n          <li *ngFor=\"let error of errors\">\n            {{error}}\n          </li>\n        </ul>\n\n        <div class=\"d-grid\">\n          <button [disabled]=\"registerForm.invalid\" class=\"btn btn-lg btn-primary mt-3\" type=\"submit\">Sign up</button>\n        </div>\n      </form>\n    </div>\n  \n  </div>\n"],"names":["RouterModule","LoginComponent","RegisterComponent","routes","path","component","AccountRoutingModule","forChild","imports","exports","CommonModule","SharedModule","AccountModule","declarations","FormControl","FormGroup","Validators","constructor","accountService","router","activatedRoute","email","required","password","returnUrl","snapshot","queryParams","onSubmit","login","loginForm","value","subscribe","next","navigateByUrl","selectors","decls","vars","consts","template","i0","ctx","debounceTime","finalize","map","switchMap","take","fb","group","displayName","validateEmailNotTaken","pattern","complexPassword","register","registerForm","error","errors","control","valueChanges","pipe","checkEmailExists","result","emailExists","markAsTouched"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}